-- SELECT
-- 모든 레코드 조회하기
SELECT * FROM ANIMAL_INS ORDER BY  ANIMAL_ID;

-- 역순 정렬하기
SELECT NAME,DATETIME FROM ANIMAL_INS ORDER BY  ANIMAL_ID DESC;

-- 아픈 동물 찾기
SELECT ANIMAL_ID,NAME FROM ANIMAL_INS WHERE INTAKE_CONDITION="Sick" ORDER BY ANIMAL_ID;

-- 어린 동물 찾기
SELECT ANIMAL_ID,NAME FROM ANIMAL_INS WHERE INTAKE_CONDITION!="Aged" ORDER BY ANIMAL_ID;

-- 동물의 아이디와 이름
SELECT ANIMAL_ID,NAME FROM ANIMAL_INS ORDER BY ANIMAL_ID;

-- 여러 기준으로 정렬하기
SELECT ANIMAL_ID,NAME,DATETIME FROM ANIMAL_INS ORDER BY NAME ASC,DATETIME DESC;

-- 상위 n개 레코드
SELECT NAME FROM ANIMAL_INS ORDER BY DATETIME ASC LIMIT 1;

-- SUM,MAX,MIN
-- 최댓값 구하기
SELECT DATETIME FROM ANIMAL_INS ORDER BY DATETIME DESC LIMIT 1;
SELECT MAX(DATETIME) FROM ANIMAL_INS;

-- 최솟값 구하기
SELECT MIN(DATETIME) FROM ANIMAL_INS;

-- 동물 수 구하기
SELECT COUNT(*) FROM ANIMAL_INS;

-- 중복 제거하기
SELECT COUNT(DISTINCT NAME) FROM ANIMAL_INS WHERE NAME is not NULL;

-- IS NULL
-- 이름이 없는 동물의 아이디
SELECT ANIMAL_ID FROM ANIMAL_INS WHERE NAME IS NULL;

-- 이름이 있는 동물의 아이디
SELECT ANIMAL_ID FROM ANIMAL_INS WHERE NAME IS NOT NULL;

-- NULL 처리하기
SELECT ANIMAL_TYPE, IFNULL(NAME, 'No name'), SEX_UPON_INTAKE FROM ANIMAL_INS ORDER BY ANIMAL_ID

-- GROUP BY
-- 고양이와 개는 몇 마리 있을까
SELECT ANIMAL_TYPE, COUNT(ANIMAL_TYPE) AS count FROM ANIMAL_INS GROUP BY ANIMAL_TYPE ORDER BY ANIMAL_TYPE;

-- 동명 동물 수 찾기
SELECT NAME, COUNT(NAME) AS COUNT FROM ANIMAL_INS WHERE NAME IS NOT NULL GROUP BY NAME HAVING count(name) >1 ORDER BY NAME;

-- 입양 시각 구하기(1)
SELECT HOUR(DATETIME) AS HOUR, COUNT(HOUR(DATETIME)) FROM ANIMAL_OUTS GROUP BY HOUR(DATETIME) HAVING HOUR>=9 AND HOUR<=19 ORDER BY HOUR;

-- 입양 시각 구하기(2)
SET @HOUR := -1;
SELECT (@HOUR := @HOUR + 1) as HOUR, (SELECT COUNT(*) FROM ANIMAL_OUTS WHERE HOUR(DATETIME) = @HOUR) FROM ANIMAL_OUTS WHERE @HOUR<23;

-- String,Date
-- 루시와 엘라 찾기
SELECT ANIMAL_ID,NAME,SEX_UPON_INTAKE FROM ANIMAL_INS
WHERE NAME in ('Lucy','Ella','Pickle','Rogan','Sabrina','Mitty')
ORDER BY ANIMAL_ID

-- 이름에 el이 들어가는 동물 찾기
SELECT ANIMAL_ID,NAME FROM ANIMAL_INS
WHERE NAME LIKE '%el%' AND ANIMAL_TYPE='DOG'
ORDER BY NAME ASC

-- 중성화 여부 파악하기
SELECT ANIMAL_ID,NAME,  
CASE
    WHEN SEX_UPON_INTAKE LIKE '%Neutered%' OR SEX_UPON_INTAKE LIKE '%Spayed%'
    THEN "O"
    ELSE "X"
    END AS 중성화
FROM ANIMAL_INS

-- 오랜 기간 보호한 동물(2)
SELECT I.ANIMAL_ID,I.NAME FROM ANIMAL_OUTS AS O JOIN ANIMAL_INS AS I ON O.ANIMAL_ID=I.ANIMAL_ID
ORDER BY (O.DATETIME-I.DATETIME) DESC LIMIT 2

-- DATETIME에서 DATE로 형 변환
SELECT ANIMAL_ID,NAME,DATE_FORMAT(DATETIME,'%Y-%m-%d') 날짜 FROM ANIMAL_INS
ORDER BY ANIMAL_ID

-- JOIN
-- 없어진 기록 찾기
SELECT ANIMAL_ID, NAME FROM ANIMAL_OUTS AS o LEFT OUTER JOIN ANIMAL_INS AS i ON o.ANIMAL_ID == i.ANIMAL_ID WHERE ANIMAL_ID IS NULL;

-- 있었는데요 없었습니다
SELECT i.ANIMAL_ID,i.NAME FROM ANIMAL_INS AS i,ANIMAL_OUTS AS o
WHERE i.ANIMAL_ID=o.ANIMAL_ID AND i.DATETIME > o.DATETIME
ORDER BY i.DATETIME

-- 오랜 기간 보호한 동물(1)
SELECT i.NAME,i.DATETIME FROM ANIMAL_INS AS i LEFT JOIN ANIMAL_OUTS AS o ON i.ANIMAL_ID=o.ANIMAL_ID
WHERE o.ANIMAL_ID IS NULL
ORDER BY i.DATETIME ASC LIMIT 3

-- 보호소에서 중성화한 동물
SELECT i.ANIMAL_ID,i.ANIMAL_TYPE,i.NAME FROM ANIMAL_INS AS i, ANIMAL_OUTS AS o
WHERE i.ANIMAL_ID=o.ANIMAL_ID
AND i.SEX_UPON_INTAKE LIKE "%Intact%" 
AND (o.SEX_UPON_OUTCOME ="Neutered Male" OR o.SEX_UPON_OUTCOME ="Spayed Female")
ORDER BY i.ANIMAL_ID ASC